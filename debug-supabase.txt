<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Debug Supabase - Sistema Multas ITF</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .log-container {
            background: #1e1e1e;
            color: #fff;
            font-family: 'Courier New', monospace;
            padding: 20px;
            border-radius: 8px;
            max-height: 400px;
            overflow-y: auto;
        }
        .success { color: #28a745; }
        .error { color: #dc3545; }
        .info { color: #17a2b8; }
        .warning { color: #ffc107; }
    </style>
</head>
<body class="bg-light">
    <div class="container mt-5">
        <div class="row">
            <div class="col-12">
                <h1 class="text-center mb-4">üîß Debug Supabase Connection</h1>
                
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Configuraci√≥n Actual</h5>
                    </div>
                    <div class="card-body">
                        <p><strong>URL:</strong> <code id="current-url"></code></p>
                        <p><strong>API Key:</strong> <code id="current-key"></code></p>
                        <p><strong>Estado:</strong> <span id="connection-status" class="badge bg-secondary">No probado</span></p>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Pruebas de Conexi√≥n</h5>
                    </div>
                    <div class="card-body">
                        <button id="test-connection" class="btn btn-primary me-2">üîç Probar Conexi√≥n</button>
                        <button id="test-students" class="btn btn-info me-2">üë• Cargar Estudiantes</button>
                        <button id="test-config" class="btn btn-warning me-2">‚öôÔ∏è Cargar Configuraci√≥n</button>
                        <button id="clear-log" class="btn btn-secondary">üóëÔ∏è Limpiar Log</button>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Log de Debug</h5>
                    </div>
                    <div class="card-body">
                        <div id="debug-log" class="log-container">
                            <div class="info">üöÄ Sistema de debug iniciado...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    <script src="js/supabase-setup.js"></script>
    <script>
        const logContainer = document.getElementById('debug-log');
        
        function addLog(message, type = 'info') {
            const timestamp = new Date().toLocaleTimeString();
            const logEntry = document.createElement('div');
            logEntry.className = type;
            logEntry.innerHTML = `[${timestamp}] ${message}`;
            logContainer.appendChild(logEntry);
            logContainer.scrollTop = logContainer.scrollHeight;
        }

        // Mostrar configuraci√≥n actual
        document.getElementById('current-url').textContent = 'https://cgvhokfwcxxmapdceyxg.supabase.co';
        document.getElementById('current-key').textContent = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...';

        // Inicializar al cargar
        window.addEventListener('load', async function() {
            try {
                addLog('üîÑ Cargando Supabase...', 'info');
                await loadSupabase();
                addLog('‚úÖ Supabase cargado correctamente', 'success');
                document.getElementById('connection-status').className = 'badge bg-success';
                document.getElementById('connection-status').textContent = 'Conectado';
                
                // NO hacer conexi√≥n autom√°tica - solo manual
                
            } catch (error) {
                addLog('‚ùå Error al cargar Supabase: ' + error.message, 'error');
                document.getElementById('connection-status').className = 'badge bg-danger';
                document.getElementById('connection-status').textContent = 'Error';
            }
        });

        // Bot√≥n probar conexi√≥n
        document.getElementById('test-connection').addEventListener('click', async function() {
            addLog('üîç Probando conexi√≥n directa...', 'info');
            
            // Esperar a que Supabase est√© listo
            await new Promise(resolve => setTimeout(resolve, 500));
            
            try {
                // Probar conexi√≥n directa
                if (window.EstudiantesDB) {
                    addLog('‚úÖ EstudiantesDB disponible', 'success');
                    const estudiantes = await EstudiantesDB.obtenerTodos();
                    addLog(`‚úÖ Conexi√≥n exitosa - ${estudiantes.length} estudiantes encontrados`, 'success');
                    
                    if (estudiantes.length > 0) {
                        addLog('üéâ ¬°Base de datos funcionando correctamente!', 'success');
                        estudiantes.slice(0, 3).forEach(est => {
                            addLog(`   - ${est.apellido}, ${est.nombre} (Deuda: ${est.deuda} Bs)`, 'info');
                        });
                        if (estudiantes.length > 3) {
                            addLog(`   ... y ${estudiantes.length - 3} m√°s`, 'info');
                        }
                    } else {
                        addLog('‚ö†Ô∏è Base de datos vac√≠a - ejecuta este SQL:', 'warning');
                        addLog('INSERT INTO estudiantes (apellido, nombre, deuda) VALUES', 'info');
                        addLog("('Alvarez Cuili', 'Fernando', 0),", 'info');
                        addLog("('Colque Gomez', 'Rodrigo', 32),", 'info');
                        addLog("('Nina Quispe', 'Beymar', 0);", 'info');
                    }
                } else {
                    addLog('‚ùå EstudiantesDB no disponible - Supabase no inicializado', 'error');
                    addLog('üí° Recarga la p√°gina y espera unos segundos', 'info');
                }
            } catch (error) {
                addLog('‚ùå Error: ' + error.message, 'error');
                addLog('üí° Verifica que ejecutaste el SQL en Supabase', 'warning');
            }
        });

        // Bot√≥n cargar estudiantes
        document.getElementById('test-students').addEventListener('click', async function() {
            addLog('üë• Cargando estudiantes...', 'info');
            try {
                const estudiantes = await EstudiantesDB.obtenerTodos();
                addLog(`‚úÖ Estudiantes cargados: ${estudiantes.length}`, 'success');
                estudiantes.slice(0, 3).forEach(est => {
                    addLog(`   - ${est.apellido}, ${est.nombre} (Deuda: ${est.deuda} Bs)`, 'info');
                });
                if (estudiantes.length > 3) {
                    addLog(`   ... y ${estudiantes.length - 3} m√°s`, 'info');
                }
            } catch (error) {
                addLog('‚ùå Error al cargar estudiantes: ' + error.message, 'error');
            }
        });

        // Bot√≥n cargar configuraci√≥n
        document.getElementById('test-config').addEventListener('click', async function() {
            addLog('‚öôÔ∏è Cargando configuraci√≥n...', 'info');
            try {
                if (!window.ConfiguracionDB) {
                    addLog('‚ùå ConfiguracionDB no disponible', 'error');
                    return;
                }
                
                const yapeConfig = await ConfiguracionDB.obtenerYape();
                const fondoConfig = await ConfiguracionDB.obtenerFondo();
                
                if (yapeConfig && yapeConfig.nombreBeneficiario) {
                    addLog('‚úÖ Configuraci√≥n Yape cargada:', 'success');
                    addLog(`   - Beneficiario: ${yapeConfig.nombreBeneficiario}`, 'info');
                    addLog(`   - N√∫mero: ${yapeConfig.numeroYape}`, 'info');
                } else {
                    addLog('‚ùå Configuraci√≥n Yape vac√≠a o inv√°lida', 'error');
                }
                
                if (fondoConfig && fondoConfig.color) {
                    addLog('‚úÖ Configuraci√≥n Fondo cargada:', 'success');
                    addLog(`   - Color: ${fondoConfig.color}`, 'info');
                } else {
                    addLog('‚ùå Configuraci√≥n Fondo vac√≠a o inv√°lida', 'error');
                }
            } catch (error) {
                addLog('‚ùå Error al cargar configuraci√≥n: ' + error.message, 'error');
            }
        });

        // Bot√≥n limpiar log
        document.getElementById('clear-log').addEventListener('click', function() {
            logContainer.innerHTML = '<div class="info">üßπ Log limpiado</div>';
        });
    </script>
</body>
</html>
